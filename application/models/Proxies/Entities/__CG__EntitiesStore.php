<?php

namespace Proxies\Entities\__CG__\Entities;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Store extends \Entities\Store implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function getCreated()
    {
        $this->__load();
        return parent::getCreated();
    }

    public function getPayments()
    {
        $this->__load();
        return parent::getPayments();
    }

    public function addPayment(\Entities\Payment $payment)
    {
        $this->__load();
        return parent::addPayment($payment);
    }

    public function getProducts()
    {
        $this->__load();
        return parent::getProducts();
    }

    public function addProduct(\Entities\Product $product)
    {
        $this->__load();
        return parent::addProduct($product);
    }

    public function setTitle($companyName)
    {
        $this->__load();
        return parent::setTitle($companyName);
    }

    public function getTitle()
    {
        $this->__load();
        return parent::getTitle();
    }

    public function setDescription($description)
    {
        $this->__load();
        return parent::setDescription($description);
    }

    public function getDescription()
    {
        $this->__load();
        return parent::getDescription();
    }

    public function setDesign($design)
    {
        $this->__load();
        return parent::setDesign($design);
    }

    public function getDesign()
    {
        $this->__load();
        return parent::getDesign();
    }

    public function setDomain($domain)
    {
        $this->__load();
        return parent::setDomain($domain);
    }

    public function getDomain()
    {
        $this->__load();
        return parent::getDomain();
    }

    public function setIsDaylightTime($isDaylightTime)
    {
        $this->__load();
        return parent::setIsDaylightTime($isDaylightTime);
    }

    public function getIsDaylightTime()
    {
        $this->__load();
        return parent::getIsDaylightTime();
    }

    public function setIsOrderInform($isOrderInform)
    {
        $this->__load();
        return parent::setIsOrderInform($isOrderInform);
    }

    public function getIsOrderInform()
    {
        $this->__load();
        return parent::getIsOrderInform();
    }

    public function setLogoExt($logoExt)
    {
        $this->__load();
        return parent::setLogoExt($logoExt);
    }

    public function getLogoExt()
    {
        $this->__load();
        return parent::getLogoExt();
    }

    public function setOrderEmail($orderEmail)
    {
        $this->__load();
        return parent::setOrderEmail($orderEmail);
    }

    public function getOrderEmail()
    {
        $this->__load();
        return parent::getOrderEmail();
    }

    public function setPurchaseFee($purchaseFee)
    {
        $this->__load();
        return parent::setPurchaseFee($purchaseFee);
    }

    public function getPurchaseFee()
    {
        $this->__load();
        return parent::getPurchaseFee();
    }

    public function setPurchasePercentage($purchasePercentage)
    {
        $this->__load();
        return parent::setPurchasePercentage($purchasePercentage);
    }

    public function getPurchasePercentage()
    {
        $this->__load();
        return parent::getPurchasePercentage();
    }

    public function setState($state)
    {
        $this->__load();
        return parent::setState($state);
    }

    public function getState()
    {
        $this->__load();
        return parent::getState();
    }

    public function setTimezone($timezone)
    {
        $this->__load();
        return parent::setTimezone($timezone);
    }

    public function getTimezone()
    {
        $this->__load();
        return parent::getTimezone();
    }

    public function setTimezoneOffset($timezoneOffset)
    {
        $this->__load();
        return parent::setTimezoneOffset($timezoneOffset);
    }

    public function getTimezoneOffset()
    {
        $this->__load();
        return parent::getTimezoneOffset();
    }

    public function getCategories()
    {
        $this->__load();
        return parent::getCategories();
    }

    public function addCategory(\Entities\Category $category)
    {
        $this->__load();
        return parent::addCategory($category);
    }

    public function setUser($user)
    {
        $this->__load();
        return parent::setUser($user);
    }

    public function getUser()
    {
        $this->__load();
        return parent::getUser();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'domain', 'title', 'description', 'timezone', 'isDaylightTime', 'timezoneOffset', 'logoExt', 'created', 'isOrderInform', 'orderEmail', 'purchasePercentage', 'purchaseFee', 'state', 'categories', 'products', 'payments', 'design', 'user');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}